(|nqueenb|
 (|extends_TCC1| 0
  (|extends_TCC1-1| |nil| 3504609557 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|extends| SUBTYPE "nqueenb.j" "below(nqueenb.N)")))
 (|search_TCC1| 0
  (|search_TCC1-1| NIL 3927905598 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|search| SUBTYPE "nqueenb.ii" "below(nqueenb.N)")))
 (|search_TCC2| 0
  (|search_TCC1-1| |nil| 3504606239 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|search| SUBTYPE "(number_fields.+)(nqueenb.i, 1)" "upto(nqueenb.N)")))
 (|search_TCC3| 0
  (|search_TCC2-1| |nil| 3504606239 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|search| SUBTYPE "nqueenb.k" "below(nqueenb.N)")))
 (|search_TCC4| 0
  (|search_TCC4-1| NIL 3928056793 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|search| SUBTYPE "nqueenb.ii" "below(nqueenb.N)")))
 (|search_TCC5| 0
  (|search_TCC4-1| |nil| 3504606239 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|search| SUBTYPE "(number_fields.+)(nqueenb.i, 1)" "upto(nqueenb.N)")))
 (|search_TCC6| 0
  (|search_TCC5-1| |nil| 3504606239 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|search| SUBTYPE "nqueenb.i" "upto(nqueenb.N)")))
 (|search_TCC7| 0
  (|search_TCC3-1| |nil| 3504606239 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|search| SUBTYPE "(number_fields.-)(nqueenb.N, nqueenb.j)"
    "naturalnumber")))
 (|search_TCC8| 0
  (|search_TCC6-1| |nil| 3504606239
   ("" (SKEEP :PREDS? T)
    (("" (EXPAND "qlift?")
      (("" (EXPAND "good_extension?")
        (("" (EXPAND "extends")
          (("" (SKEEP)
            (("" (INST - "queen(i)" "queen")
              (("1" (ASSERT) (("1" (LAZY-GRIND) NIL NIL)) NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|search| SUBTYPE "lift_adt[board].bottom"
    "(nqueenb.qlift?(nqueenb.good_extension?(nqueenb.i, nqueenb.A, nqueenb.p)))")))
 (|search_TCC9| 0
  (|search_TCC9-1| NIL 3928056793
   ("" (SKEEP* :PREDS? T)
    (("" (INST - "B" "A" "i")
      (("" (GROUND)
        (("1" (INST - "ii") (("1" (GROUND) (("1" (INST?) NIL NIL)) NIL)) NIL)
         ("2" (GRIND) NIL NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|search| SUBTYPE "nqueenb.B"
    "{B: nqueenb.board | FORALL (ii: naturalnumbers.below((number_fields.+)(nqueenb.i, 1))): nqueenb.p(B)(ii)}")))
 (|search_TCC10| 0
  (|search_TCC10-1| NIL 3941066977
   ("" (SKEEP* :PREDS? T)
    (("" (INST - "A" "B" "i")
      (("" (GROUND)
        (("1" (INST - "ii") (("1" (GROUND) (("1" (INST?) NIL NIL)) NIL)) NIL)
         ("2" (EXPAND "extends") (("2" (PROPAX) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|search| SUBTYPE "nqueenb.B"
    "{A: board | FORALL (ii: naturalnumbers.below(nqueenb.i)): nqueenb.p(A)(ii)}")))
 (|search_TCC11| 0
  (|search_TCC7-1| |nil| 3504606239
   ("" (SKEEP* :PREDS? T)
    (("" (ASSERT)
      (("" (SKEEP* :PREDS? T)
        (("" (INST -6 "k" "B_1")
          (("1" (GROUND) NIL NIL)
           ("2" (TYPEPRED "f(B)")
            (("2" (EXPAND "qlift?")
              (("2" (INST - "B_1") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|search| SUBTYPE "(number_fields.+)(nqueenb.j, 1)"
    "{j: upto(nqueenb.N) | FORALL (k: naturalnumbers.below(j), B_1: board): (booleans.NOT)(nqueenb.good_extension?((number_fields.+)(1, nqueenb.i), nqueenb.B WITH [(nqueenb.i) := k], nqueenb.p)(B_1))}")))
 (|search_TCC12| 0
  (|search_TCC8-1| |nil| 3504610279 ("" (TERMINATION-TCC) NIL NIL) NIL NIL
   (|search| TERMINATION
    "nqueenb.search(nqueenb.i, nqueenb.p, nqueenb.B, (number_fields.+)(nqueenb.j, 1), nqueenb.f)"
    "NIL")))
 (|search_TCC13| 0
  (|search_TCC13-1| NIL 3941066977
   ("" (SKEEP* :PREDS? T)
    (("" (TYPEPRED "v(i, p, B, j + 1, f)")
      (("1" (EXPAND "qlift?")
        (("1" (LIFT-IF)
          (("1" (GROUND)
            (("1" (SKEEP)
              (("1" (INST - "queen")
                (("1" (EXPAND "good_extension?" :FNUM (-2 1))
                  (("1" (GROUND)
                    (("1" (INST - "A" "B" "i")
                      (("1" (GROUND)
                        (("1" (LAZY-GRIND) NIL NIL)
                         ("2" (EXPAND "extends" 1) (("2" (PROPAX) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (EXPAND "good_extension?" :FNUM (-1 2))
              (("2" (GROUND)
                (("2" (INST - "A" "B" "i") (("2" (LAZY-GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (GROUND)
        (("2" (SKEEP)
          (("2" (INST -6 "k" "B_1")
            (("1" (LAZY-GRIND) NIL NIL)
             ("2" (TYPEPRED "f(B)")
              (("2" (EXPAND "qlift?")
                (("2" (LIFT-IF)
                  (("2" (GROUND)
                    (("1" (INST -2 "B_1") (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (INST -1 "B_1") (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (SKEEP :PREDS? T)
        (("3" (INST -4 "ii")
          (("3" (INST - "A" "B" "i") (("3" (LAZY-GRIND) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|search| SUBTYPE
    "nqueenb.search(nqueenb.i, nqueenb.p, nqueenb.B, (number_fields.+)(nqueenb.j, 1), nqueenb.f)"
    "(nqueenb.qlift?(nqueenb.good_extension?(nqueenb.i, nqueenb.A, nqueenb.p)))")))
 (|search_TCC14| 0
  (|search_TCC9-1| |nil| 3758159714
   ("" (SKEEP* :PREDS? T)
    (("" (TYPEPRED "f(B)")
      (("" (EXPAND "qlift?")
        (("" (GROUND)
          (("" (HIDE -6)
            (("" (EXPAND "good_extension?")
              (("" (GROUND)
                (("1" (REPLACE -9) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (EXPAND "extends")
                  (("2" (SKEEP :PREDS? T)
                    (("2" (HIDE -2)
                      (("2" (INST - "j!1")
                        (("2" (REPLACE -7 :HIDE? T)
                          (("2" (ASSERT)
                            (("2" (REPLACE -8 :HIDE? T)
                              (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|search| SUBTYPE "lift_adt[board].up(nqueenb.C)"
    "(nqueenb.qlift?(nqueenb.good_extension?(nqueenb.i, nqueenb.A, nqueenb.p)))")))
 (|search_TCC15| 0
  (|search_TCC15-1| NIL 3941066977
   ("" (SKEEP* :PREDS? T)
    (("" (INST? -4) (("" (INST - "A" "B" "i") (("" (LAZY-GRIND) NIL NIL)) NIL))
      NIL))
    NIL)
   NIL NIL
   (|search| SUBTYPE "nqueenb.B"
    "{A: board | FORALL (ii: naturalnumbers.below(nqueenb.i)): nqueenb.p(A)(ii)}")))
 (|search_TCC16| 0
  (|search_TCC10-1| NIL 3927734739
   ("" (SKEEP* :PREDS? T)
    (("" (GROUND)
      (("" (SKEEP* :PREDS? T)
        (("" (INST -7 "k" "B_1")
          (("1" (ASSERT) NIL NIL)
           ("2" (EXPAND "good_extension?")
            (("2" (GROUND)
              (("2" (INST -5 "B_1" "B" "i+1")
                (("2" (GROUND) (("2" (LAZY-GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|search| SUBTYPE "(number_fields.+)(nqueenb.j, 1)"
    "{j: upto(nqueenb.N) | FORALL (k: naturalnumbers.below(j), B_1: board): (booleans.NOT)(nqueenb.good_extension?((number_fields.+)(1, nqueenb.i), nqueenb.B WITH [(nqueenb.i) := k], nqueenb.p)(B_1))}")))
 (|search_TCC17| 0
  (|search_TCC11-1| NIL 3927762617 ("" (TERMINATION-TCC) NIL NIL) NIL NIL
   (|search| TERMINATION
    "nqueenb.search(nqueenb.i, nqueenb.p, nqueenb.B, (number_fields.+)(nqueenb.j, 1), nqueenb.f)"
    "NIL")))
 (|search_TCC18| 0
  (|search_TCC18-1| NIL 3941066977
   ("" (SKEEP*)
    (("" (TYPEPRED "v(i, p, B, j + 1, f)")
      (("1" (EXPAND "qlift?")
        (("1" (LIFT-IF)
          (("1" (GROUND)
            (("1" (LAZY-GRIND) NIL NIL) ("2" (LAZY-GRIND) NIL NIL)) NIL))
          NIL))
        NIL)
       ("2" (USE "search_TCC16")
        (("2" (ASSERT) (("2" (INST?) (("2" (GROUND) NIL NIL)) NIL)) NIL)) NIL)
       ("3" (USE "search_TCC15")
        (("3" (GROUND) (("3" (INST?) (("3" (GROUND) NIL NIL)) NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL) (N FORMAL-CONST-DECL "nat" |nqueenb| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|board| TYPE-EQ-DECL NIL |nqueenb| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|qlift?| CONST-DECL "bool" |nqueenb| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|extends| CONST-DECL "bool" |nqueenb| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|good_extension?| CONST-DECL "bool" |nqueenb| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|minus_u8_u8| APPLICATION-JUDGEMENT "int16" |integertypes| NIL)
    (|minus_i32_u32| APPLICATION-JUDGEMENT "int64" |integertypes| NIL)
    (|minus_i16_u16| APPLICATION-JUDGEMENT "int32" |integertypes| NIL)
    (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|search_TCC16| SUBTYPE-TCC NIL |nqueenb| NIL)
    (|search_TCC15| SUBTYPE-TCC NIL |nqueenb| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   NIL
   (|search| SUBTYPE
    "nqueenb.search(nqueenb.i, nqueenb.p, nqueenb.B, (number_fields.+)(nqueenb.j, 1), nqueenb.f)"
    "(nqueenb.qlift?(nqueenb.good_extension?(nqueenb.i, nqueenb.A, nqueenb.p)))")))
 (|search_TCC19| 0
  (|search_TCC10-1| |nil| 3758159714 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|search| SUBTYPE "nqueenb.j" "below(nqueenb.N)")))
 (|scan_TCC1| 0
  (|scan_TCC1-1| |nil| 3504606239 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|scan| SUBTYPE "(number_fields.-)(nqueenb.N, nqueenb.i)" "naturalnumber")))
 (|scan_TCC2| 0
  (|scan_TCC2-1| |nil| 3504606239 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|scan| SUBTYPE
    "lift_adt[{queen | FORALL (ii: naturalnumbers.below(nqueenb.i)): nqueenb.p(nqueenb.queen)(ii)}].up(nqueenb.queen)"
    "(nqueenb.qlift?(nqueenb.good_extension?(nqueenb.i, nqueenb.queen, nqueenb.p)))")))
 (|scan_TCC3| 0
  (|scan_TCC4-1| |nil| 3504606239 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|scan| SUBTYPE "nqueenb.i" "below(nqueenb.N)")))
 (|scan_TCC4| 0
  (|scan_TCC5-1| |nil| 3504606239 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|scan| SUBTYPE "0"
    "{j: upto(nqueenb.N) | FORALL (k: naturalnumbers.below(j), B: board): (booleans.NOT)(nqueenb.good_extension?((number_fields.+)(1, nqueenb.i), nqueenb.queen WITH [(nqueenb.i) := k], nqueenb.p)(B))}")))
 (|scan_TCC5| 0
  (|scan_TCC6-1| |nil| 3504606239 ("" (TERMINATION-TCC) NIL NIL) NIL NIL
   (|scan| SUBTYPE "(number_fields.+)(nqueenb.i, 1)" "upto(nqueenb.N)")))
 (|scan_TCC6| 0
  (|scan_TCC7-1| |nil| 3504606239 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|scan| TERMINATION
    "nqueenb.scan((number_fields.+)(nqueenb.i, 1), nqueenb.p)" "NIL")))
 (|findboard_TCC1| 0
  (|findboard_TCC1-1| |nil| 3504642677 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|findboard| SUBTYPE "0" "below(nqueenb.N)")))
 (|findboard_TCC2| 0
  (|findboard_TCC2-1| NIL 3927734739 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|findboard| SUBTYPE "LAMBDA (i: naturalnumbers.below(nqueenb.N)): 0"
    "{queen: board | FORALL (ii: naturalnumbers.below(0)): nqueenb.p(queen)(ii)}")))
 (|findboard_TCC3| 0
  (|findboard_TCC2-1| |nil| 3504642677 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|findboard| SUBTYPE "0" "upto(nqueenb.N)")))
 (|findboard_TCC4| 0
  (|findboard_TCC3-1| |nil| 3504642677
   ("" (SKEEP* :PREDS? T)
    (("" (EXPAND "qlift?")
      (("" (LIFT-IF)
        (("" (GROUND)
          (("1" (TYPEPRED "scan(0, p)(LAMBDA (i: below(N)): 0)")
            (("1" (EXPAND "qlift?")
              (("1" (SKEEP* :PREDS? T)
                (("1" (EXPAND "allP")
                  (("1" (INST - "queen")
                    (("1" (EXPAND "good_extension?")
                      (("1" (GROUND)
                        (("1" (EXPAND "extends" +) (("1" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (GRIND) NIL NIL))
            NIL)
           ("2" (TYPEPRED "scan(0, p)(LAMBDA (i: below(N)): 0)")
            (("1" (EXPAND "qlift?")
              (("1" (EXPAND "allP")
                (("1" (SKEEP)
                  (("1" (EXPAND "good_extension?")
                    (("1" (GROUND) (("1" (INST?) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|findboard| SUBTYPE
    "nqueenb.scan(0, nqueenb.p)(LAMBDA (i: naturalnumbers.below(nqueenb.N)): 0)"
    "(nqueenb.qlift?(nqueenb.allP(nqueenb.p)))")))
 (|nqueenb_TCC1| 0
  (|nqueenb_TCC1-1| NIL 3937215184
   ("" (SKEEP*)
    (("" (GROUND)
      (("1" (LAZY-GRIND :IF-MATCH ALL) NIL NIL)
       ("2" (EXPAND "goodqueen?")
        (("2" (SKEEP)
          (("2" (INST - "j_1") (("2" (LAZY-GRIND :IF-MATCH ALL) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL NIL
   (|nqueenb| SUBTYPE "nqueenb.goodqueen?"
    "{q: [nqueenb.board -> [naturalnumbers.below(nqueenb.N) -> booleans.bool]] | FORALL (A: board), (B: board), (i: upto(N)): booleans.=>(nqueenb.extends(i, B, A), FORALL (j: naturalnumbers.below(i)): booleans.<=>(q(A)(j), q(B)(j)))}")))
 (|nqueenb_TCC2| 0
  (|nqueenb_TCC2-1| NIL 3937215184
   ("" (TYPEPRED "findboard(goodqueen?)") (("" (GRIND) NIL NIL)) NIL) NIL NIL
   (|nqueenb| SUBTYPE "nqueenb.findboard(nqueenb.goodqueen?)"
    "(nqueenb.qlift?(nqueenb.goodboard?))"))))
(|test_queenb|)

