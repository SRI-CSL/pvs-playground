(|HoareLogicP|
 (|first_TCC1| 0
  (|first_TCC1-1| NIL 3940603270 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|first| SUBTYPE "0" "below[X`length]")))
 (|last_TCC1| 0
  (|last_TCC1-1| NIL 3940603270 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|last| SUBTYPE "(number_fields.-)(HoareLogicP.X`length, 1)"
    "below[X`length]")))
 (|splice_TCC1| 0
  (|splice_TCC1-1| NIL 3940603270 ("" (SUBTYPE-TCC) NIL NIL)
   ((O CONST-DECL "finseq" |finite_sequences| NIL)) NIL
   (|splice| SUBTYPE "finite_sequences[state].o(HoareLogicP.X, HoareLogicP.Y)"
    "trace")))
 (|programSize_TCC1| 0
  (|programSize_TCC1-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[program])" |HoareLogicP| NIL)) NIL
   (|programSize| TERMINATION "HoareLogicP.programSize(HoareLogicP.S1)"
    "NIL")))
 (|programSize_TCC2| 0
  (|programSize_TCC2-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[program])" |HoareLogicP| NIL)) NIL
   (|programSize| TERMINATION "HoareLogicP.programSize(HoareLogicP.S2)"
    "NIL")))
 (|programSize_TCC3| 0
  (|programSize_TCC3-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[program])" |HoareLogicP| NIL)) NIL
   (|programSize| TERMINATION "HoareLogicP.programSize(HoareLogicP.S1)"
    "NIL")))
 (|programSize_TCC4| 0
  (|programSize_TCC4-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[program])" |HoareLogicP| NIL)) NIL
   (|programSize| TERMINATION "HoareLogicP.programSize(HoareLogicP.S1)"
    "NIL")))
 (|programSize_TCC5| 0
  (|programSize_TCC5-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[program])" |HoareLogicP| NIL)) NIL
   (|programSize| TERMINATION "HoareLogicP.programSize(HoareLogicP.S2)"
    "NIL")))
 (|meaning_TCC1| 0
  (|meaning_TCC1-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((|lex2| CONST-DECL "ordinal" |lex2| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|plus_u8_u8| APPLICATION-JUDGEMENT "uint16" |integertypes| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< DEF-DECL "bool" |ordinals| NIL)
    (|programSize| DEF-DECL "nat" |HoareLogicP| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|meaning| TERMINATION "HoareLogicP.meaning(HoareLogicP.S1)(HoareLogicP.X)"
    "NIL")))
 (|meaning_TCC2| 0
  (|meaning_TCC2-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((|lex2| CONST-DECL "ordinal" |lex2| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< DEF-DECL "bool" |ordinals| NIL)
    (|programSize| DEF-DECL "nat" |HoareLogicP| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|meaning| TERMINATION "HoareLogicP.meaning(HoareLogicP.S2)(HoareLogicP.X)"
    "NIL")))
 (|meaning_TCC3| 0
  (|meaning_TCC3-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((|lex2| CONST-DECL "ordinal" |lex2| NIL)
    (|splice| CONST-DECL "trace" |HoareLogicP| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|programSize| DEF-DECL "nat" |HoareLogicP| NIL)
    (< DEF-DECL "bool" |ordinals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|meaning| TERMINATION "HoareLogicP.meaning(HoareLogicP.S1)(HoareLogicP.Y)"
    "NIL")))
 (|meaning_TCC4| 0
  (|meaning_TCC4-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((|lex2| CONST-DECL "ordinal" |lex2| NIL)
    (|splice| CONST-DECL "trace" |HoareLogicP| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|programSize| DEF-DECL "nat" |HoareLogicP| NIL)
    (< DEF-DECL "bool" |ordinals| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|meaning| TERMINATION "HoareLogicP.meaning(HoareLogicP.S)(HoareLogicP.Z)"
    "NIL")))
 (|meaning_TCC5| 0
  (|meaning_TCC5-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((|lex2| CONST-DECL "ordinal" |lex2| NIL)
    (|splice| CONST-DECL "trace" |HoareLogicP| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< DEF-DECL "bool" |ordinals| NIL)
    (|programSize| DEF-DECL "nat" |HoareLogicP| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|meaning| TERMINATION "HoareLogicP.meaning(HoareLogicP.S1)(HoareLogicP.Y)"
    "NIL")))
 (|meaning_TCC6| 0
  (|meaning_TCC6-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((|lex2| CONST-DECL "ordinal" |lex2| NIL)
    (|splice| CONST-DECL "trace" |HoareLogicP| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< DEF-DECL "bool" |ordinals| NIL)
    (|programSize| DEF-DECL "nat" |HoareLogicP| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|meaning| TERMINATION "HoareLogicP.meaning(HoareLogicP.S2)(HoareLogicP.Z)"
    "NIL")))
 (|skip_rule| 0
  (|skip_rule-1| NIL 3940605883 ("" (GRIND) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|meaning| DEF-DECL "bool" |HoareLogicP| NIL)
    (|triple_holds| CONST-DECL "bool" |HoareLogicP| NIL)
    (|triple_valid| CONST-DECL "bool" |HoareLogicP| NIL))
   SHOSTAK))
 (|assignment_rule| 0
  (|assignment_rule-1| NIL 3940605905 ("" (GRIND) NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (O CONST-DECL "assertion" |HoareLogicP| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|meaning| DEF-DECL "bool" |HoareLogicP| NIL)
    (|triple_holds| CONST-DECL "bool" |HoareLogicP| NIL)
    (|triple_valid| CONST-DECL "bool" |HoareLogicP| NIL))
   SHOSTAK))
 (|conditional_rule| 0
  (|conditional_rule-1| NIL 3940605924 ("" (GRIND) NIL NIL)
   ((|parameter| FORMAL-TYPE-DECL NIL |HoareLogicP| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (⊓ CONST-DECL "bool" |HoareLogicP| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|triple_holds| CONST-DECL "bool" |HoareLogicP| NIL)
    (|triple_valid| CONST-DECL "bool" |HoareLogicP| NIL)
    (|neg| CONST-DECL "bool" |HoareLogicP| NIL)
    (|meaning| DEF-DECL "bool" |HoareLogicP| NIL))
   SHOSTAK))
 (|while_rule| 0
  (|while_rule-1| NIL 3940605943
   ("" (SKEEP)
    (("" (EXPAND "triple_valid")
      (("" (MEASURE-INDUCT+ "X`length" "X")
        (("" (EXPAND "triple_holds")
          (("" (EXPAND "meaning" +)
            (("" (SKEEP)
              (("" (GROUND)
                (("1" (SKEEP)
                  (("1" (INST - "Z")
                    (("1" (INST - "Y")
                      (("1" (GRIND :EXCLUDE "meaning") NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (GRIND :EXCLUDE "meaning") NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|neg| CONST-DECL "bool" |HoareLogicP| NIL)
    (⊓ CONST-DECL "bool" |HoareLogicP| NIL)
    (|test| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|while| ADT-CONSTRUCTOR-DECL "[[test, program] -> (while?)]" |HoareLogicP|
     NIL)
    (|while?| ADT-RECOGNIZER-DECL "[program -> boolean]" |HoareLogicP| NIL)
    (|triple_holds| CONST-DECL "bool" |HoareLogicP| NIL)
    (|program| TYPE-DECL NIL |HoareLogicP| NIL)
    (|assertion| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|parameter| FORMAL-TYPE-DECL NIL |HoareLogicP| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|measure_induction| FORMULA-DECL NIL |measure_induction| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|naturalnumber| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|meaning| DEF-DECL "bool" |HoareLogicP| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|splice| CONST-DECL "trace" |HoareLogicP| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|triple_valid| CONST-DECL "bool" |HoareLogicP| NIL))
   SHOSTAK))
 (|composition_rule| 0
  (|composition_rule-1| NIL 3940606207 ("" (GRIND) NIL NIL)
   ((|parameter| FORMAL-TYPE-DECL NIL |HoareLogicP| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|triple_holds| CONST-DECL "bool" |HoareLogicP| NIL)
    (|triple_valid| CONST-DECL "bool" |HoareLogicP| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|splice| CONST-DECL "trace" |HoareLogicP| NIL)
    (|meaning| DEF-DECL "bool" |HoareLogicP| NIL))
   SHOSTAK))
 (|conseq_rule| 0
  (|conseq_rule-1| NIL 3940606228 ("" (GRIND) NIL NIL)
   ((|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|parameter| FORMAL-TYPE-DECL NIL |HoareLogicP| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|conseq| CONST-DECL "bool" |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|triple_holds| CONST-DECL "bool" |HoareLogicP| NIL)
    (|triple_valid| CONST-DECL "bool" |HoareLogicP| NIL))
   SHOSTAK))
 (|Proof?_TCC1| 0
  (|Proof?_TCC1-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[preProof])" |HoareLogicP| NIL)) NIL
   (|Proof?| TERMINATION "HoareLogicP.Proof?(HoareLogicP.M1)" "NIL")))
 (|Proof?_TCC2| 0
  (|Proof?_TCC2-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[preProof])" |HoareLogicP| NIL)) NIL
   (|Proof?| TERMINATION "HoareLogicP.Proof?(HoareLogicP.M2)" "NIL")))
 (|Proof?_TCC3| 0
  (|Proof?_TCC3-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[preProof])" |HoareLogicP| NIL)) NIL
   (|Proof?| TERMINATION "HoareLogicP.Proof?(HoareLogicP.M1)" "NIL")))
 (|Proof?_TCC4| 0
  (|Proof?_TCC4-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[preProof])" |HoareLogicP| NIL)) NIL
   (|Proof?| TERMINATION "HoareLogicP.Proof?(HoareLogicP.M1)" "NIL")))
 (|Proof?_TCC5| 0
  (|Proof?_TCC5-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((<< ADT-DEF-DECL "(strict_well_founded?[preProof])" |HoareLogicP| NIL)) NIL
   (|Proof?| TERMINATION "HoareLogicP.Proof?(HoareLogicP.M2)" "NIL")))
 (|Proof?_TCC6| 0
  (|Proof?_TCC6-1| NIL 3940603270 ("" (TERMINATION-TCC) NIL NIL)
   ((|conseq| CONST-DECL "bool" |HoareLogicP| NIL)
    (<< ADT-DEF-DECL "(strict_well_founded?[preProof])" |HoareLogicP| NIL))
   NIL (|Proof?| TERMINATION "HoareLogicP.Proof?(HoareLogicP.M1)" "NIL")))
 (|soundness| 0
  (|soundness-1| NIL 3940606255
   ("" (INDUCT "M")
    (("1" (GRIND :REWRITES "skip_rule") NIL NIL)
     ("2" (GRIND :REWRITES "assignment_rule") NIL NIL)
     ("3" (GRIND :IF-MATCH NIL :EXCLUDE "triple_valid")
      (("3" (FORWARD-CHAIN "conditional_rule")
        (("3" (REPLACE-ETA "ift_step1_var!1`prog" "(ift?)") NIL NIL)) NIL))
      NIL)
     ("4" (GRIND :IF-MATCH NIL :EXCLUDE "triple_valid")
      (("4" (FORWARD-CHAIN "while_rule")
        (("4" (REPLACE-ETA "while_step1_var!1`prog" "(while?)") NIL NIL)) NIL))
      NIL)
     ("5" (GRIND :IF-MATCH NIL :EXCLUDE "triple_valid")
      (("5" (FORWARD-CHAIN "composition_rule")
        (("5" (REPLACE-ETA "seq_step1_var!1`prog" "(seq?)") NIL NIL)) NIL))
      NIL)
     ("6" (GRIND :EXCLUDE ("conseq" "triple_valid"))
      (("6" (FORWARD-CHAIN "conseq_rule") NIL NIL)) NIL))
    NIL)
   ((|preProof| TYPE-DECL NIL |HoareLogicP| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Proof?| DEF-DECL "bool" |HoareLogicP| NIL)
    (|assertion| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|program| TYPE-DECL NIL |HoareLogicP| NIL)
    (|triple| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|valid| CONST-DECL "bool" |HoareLogicP| NIL)
    (|conclusion| SHARED-ADT-ACCESSOR-DECL "[preProof -> triple]" |HoareLogicP|
     NIL)
    (|preProof_induction| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|meaning| DEF-DECL "bool" |HoareLogicP| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|triple_valid| CONST-DECL "bool" |HoareLogicP| NIL)
    (|triple_holds| CONST-DECL "bool" |HoareLogicP| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (O CONST-DECL "assertion" |HoareLogicP| NIL)
    (|conditional_rule| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|test| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|ift?| ADT-RECOGNIZER-DECL "[program -> boolean]" |HoareLogicP| NIL)
    (|ifcond| ADT-ACCESSOR-DECL "[(ift?) -> test]" |HoareLogicP| NIL)
    (|thenprog| ADT-ACCESSOR-DECL "[(ift?) -> program]" |HoareLogicP| NIL)
    (|elseprog| ADT-ACCESSOR-DECL "[(ift?) -> program]" |HoareLogicP| NIL)
    (|parameter| FORMAL-TYPE-DECL NIL |HoareLogicP| NIL)
    (|program_ift_eta| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|while_rule| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|while?| ADT-RECOGNIZER-DECL "[program -> boolean]" |HoareLogicP| NIL)
    (|wcond| ADT-ACCESSOR-DECL "[(while?) -> test]" |HoareLogicP| NIL)
    (|body| ADT-ACCESSOR-DECL "[(while?) -> program]" |HoareLogicP| NIL)
    (|program_while_eta| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|composition_rule| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|seq?| ADT-RECOGNIZER-DECL "[program -> boolean]" |HoareLogicP| NIL)
    (|left| ADT-ACCESSOR-DECL "[(seq?) -> program]" |HoareLogicP| NIL)
    (|right| ADT-ACCESSOR-DECL "[(seq?) -> program]" |HoareLogicP| NIL)
    (|program_seq_eta| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|conseq_rule| FORMULA-DECL NIL |HoareLogicP| NIL))
   SHOSTAK))
 (|wlp_valid| 0
  (|wlp_valid-1| NIL 3940606280
   ("" (INDUCT "S")
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
     ("3" (LAZY-GRIND :IF-MATCH ALL :POLARITY? T) NIL NIL)
     ("4" (SKEEP*)
      (("4" (REDUCE)
        (("4" (INSTALL-REWRITES :DEFS T :THEORIES "HoareLogicP")
          (("4" (STOP-REWRITE "meaning") (("4" (REDUCE) NIL NIL)) NIL)) NIL))
        NIL))
      NIL)
     ("5" (LAZY-GRIND :IF-MATCH ALL :POLARITY? T :EXCLUDE "meaning") NIL NIL))
    NIL)
   ((|program| TYPE-DECL NIL |HoareLogicP| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|parameter| FORMAL-TYPE-DECL NIL |HoareLogicP| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|assertion| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|triple_valid| CONST-DECL "bool" |HoareLogicP| NIL)
    (|wlp| CONST-DECL "bool" |HoareLogicP| NIL)
    (|program_induction| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|meaning| DEF-DECL "bool" |HoareLogicP| NIL)
    (|triple_holds| CONST-DECL "bool" |HoareLogicP| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|minus_i16_u16| APPLICATION-JUDGEMENT "int32" |integertypes| NIL)
    (|minus_i32_u32| APPLICATION-JUDGEMENT "int64" |integertypes| NIL)
    (|minus_u8_u8| APPLICATION-JUDGEMENT "int16" |integertypes| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|wlp_weak| 0
  (|wlp_weak-1| NIL 3940606329
   ("" (SKEEP)
    (("" (USE "conseq_rule" :SUBST ("P1" "wlp(S)(Q)" "Q1" "Q"))
      (("" (GRIND :REWRITES "wlp_valid") NIL NIL)) NIL))
    NIL)
   ((|wlp_valid| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|conseq| CONST-DECL "bool" |HoareLogicP| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|triple_valid| CONST-DECL "bool" |HoareLogicP| NIL)
    (|triple_holds| CONST-DECL "bool" |HoareLogicP| NIL)
    (|wlp| CONST-DECL "bool" |HoareLogicP| NIL)
    (|program| TYPE-DECL NIL |HoareLogicP| NIL)
    (|assertion| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|parameter| FORMAL-TYPE-DECL NIL |HoareLogicP| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|conseq_rule| FORMULA-DECL NIL |HoareLogicP| NIL))
   SHOSTAK))
 (|wlp_proof| 0
  (|wlp_proof-1| NIL 3940606353
   ("" (INDUCT "S")
    (("1" (SKEEP)
      (("1" (INST + "skip_step(mkTriple(wlp(skip)(Q), skip, Q))")
        (("1" (GRIND)
          (("1" (APPLY-EXTENSIONALITY)
            (("1" (GRIND)
              (("1" (INST - "(: x!1, x!1 :)")
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKEEP*)
      (("2"
        (INST +
         "assign_step(mkTriple(wlp(assign(assign1_var))(Q), assign(assign1_var),
                                            Q))")
        (("2" (GRIND)
          (("2" (APPLY-EXTENSIONALITY :HIDE? T)
            (("2" (GRIND)
              (("2" (INST - "(: x!1, assign1_var(x!1) :)")
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKEEP*)
      (("3" (INST - "Q")
        (("3" (INST - "Q")
          (("3" (SKEEP*)
            (("3"
              (INST +
               "ift_step(mkTriple(wlp(ift(ift1_var, ift2_var, ift3_var))(Q), ift(ift1_var, ift2_var, ift3_var), Q), conseq_step(mkTriple((wlp(ift(ift1_var, ift2_var, ift3_var))(Q) ⊓ ift1_var), ift2_var, Q), M), conseq_step(mkTriple((wlp(ift(ift1_var, ift2_var, ift3_var))(Q) ⊓ neg(ift1_var)), ift3_var, Q), M!1))")
              (("3" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("4" (SKEEP*)
      (("4" (INST - "wlp(while(while1_var, while2_var))(Q)")
        (("4" (SKEEP)
          (("4"
            (INST + "conseq_step(mkTriple(wlp(while(while1_var, while2_var))(Q),
                                                while(while1_var, while2_var), Q), while_step(mkTriple(wlp(while(while1_var, while2_var))(Q),
                                                while(while1_var, while2_var), (wlp(while(while1_var, while2_var))(Q) ⊓ neg(while1_var))), conseq_step(mkTriple((wlp(while(while1_var, while2_var))(Q) ⊓ while1_var), while2_var, wlp(while(while1_var, while2_var))(Q)), M)))")
            (("4" (GRIND :IF-MATCH NIL :EXCLUDE "meaning")
              (("1" (GRIND :EXCLUDE "meaning") NIL NIL)
               ("2" (INST - "splice(X!1, X!2)")
                (("2" (GRIND :EXCLUDE "meaning")
                  (("2" (EXPAND "meaning" +)
                    (("2" (GRIND :EXCLUDE "meaning") NIL NIL)) NIL))
                  NIL))
                NIL)
               ("3" (INST - "(: s!1, s!1 :)")
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("5" (SKEEP*)
      (("5" (INST - "wlp(seq2_var)(Q)")
        (("5" (INST?)
          (("5" (SKEEP*)
            (("5"
              (INST + "seq_step(mkTriple(wlp(seq(seq1_var, seq2_var))(Q),
                                        seq(seq1_var, seq2_var), Q), M, M!1)")
              (("5" (GRIND :EXCLUDE "wlp")
                (("5" (HIDE -)
                  (("5" (APPLY-EXTENSIONALITY :HIDE? T)
                    (("5" (GRIND :IF-MATCH NIL)
                      (("1" (INST?)
                        (("1" (GROUND)
                          (("1" (INST?) (("1" (GROUND) NIL NIL)) NIL)) NIL))
                        NIL)
                       ("2" (INST - "splice(X!1, X!2)")
                        (("2" (GRIND :POLARITY? T) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|program| TYPE-DECL NIL |HoareLogicP| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|parameter| FORMAL-TYPE-DECL NIL |HoareLogicP| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|assertion| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|preProof| TYPE-DECL NIL |HoareLogicP| NIL)
    (|triple| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|Proves| CONST-DECL "bool" |HoareLogicP| NIL)
    (|mkTriple| CONST-DECL "triple" |HoareLogicP| NIL)
    (|wlp| CONST-DECL "bool" |HoareLogicP| NIL)
    (|program_induction| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|skip_step?| ADT-RECOGNIZER-DECL "[preProof -> boolean]" |HoareLogicP|
     NIL)
    (|skip_step| ADT-CONSTRUCTOR-DECL "[triple -> (skip_step?)]" |HoareLogicP|
     NIL)
    (|skip?| ADT-RECOGNIZER-DECL "[program -> boolean]" |HoareLogicP| NIL)
    (|skip| ADT-CONSTRUCTOR-DECL "(skip?)" |HoareLogicP| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|meaning| DEF-DECL "bool" |HoareLogicP| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|x!1| SKOLEM-CONST-DECL "state" |HoareLogicP| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list2finseq| CONST-DECL "finseq[T]" |list2finseq| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Proof?| DEF-DECL "bool" |HoareLogicP| NIL)
    (|assign_step?| ADT-RECOGNIZER-DECL "[preProof -> boolean]" |HoareLogicP|
     NIL)
    (|assign_step| ADT-CONSTRUCTOR-DECL "[triple -> (assign_step?)]"
     |HoareLogicP| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|assignment| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|assign?| ADT-RECOGNIZER-DECL "[program -> boolean]" |HoareLogicP| NIL)
    (|assign| ADT-CONSTRUCTOR-DECL "[assignment -> (assign?)]" |HoareLogicP|
     NIL)
    (O CONST-DECL "assertion" |HoareLogicP| NIL)
    (|assign1_var| SKOLEM-CONST-DECL "assignment" |HoareLogicP| NIL)
    (|x!1| SKOLEM-CONST-DECL "state" |HoareLogicP| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|conseq| CONST-DECL "bool" |HoareLogicP| NIL)
    (|neg| CONST-DECL "bool" |HoareLogicP| NIL)
    (⊓ CONST-DECL "bool" |HoareLogicP| NIL)
    (|conseq_step| ADT-CONSTRUCTOR-DECL
     "[[triple, preProof] -> (conseq_step?)]" |HoareLogicP| NIL)
    (|conseq_step?| ADT-RECOGNIZER-DECL "[preProof -> boolean]" |HoareLogicP|
     NIL)
    (|test| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|ift| ADT-CONSTRUCTOR-DECL "[[test, program, program] -> (ift?)]"
     |HoareLogicP| NIL)
    (|ift?| ADT-RECOGNIZER-DECL "[program -> boolean]" |HoareLogicP| NIL)
    (|ift_step| ADT-CONSTRUCTOR-DECL
     "[[triple, preProof, preProof] -> (ift_step?)]" |HoareLogicP| NIL)
    (|ift_step?| ADT-RECOGNIZER-DECL "[preProof -> boolean]" |HoareLogicP| NIL)
    (|while| ADT-CONSTRUCTOR-DECL "[[test, program] -> (while?)]" |HoareLogicP|
     NIL)
    (|while?| ADT-RECOGNIZER-DECL "[program -> boolean]" |HoareLogicP| NIL)
    (|while_step?| ADT-RECOGNIZER-DECL "[preProof -> boolean]" |HoareLogicP|
     NIL)
    (|while_step| ADT-CONSTRUCTOR-DECL "[[triple, preProof] -> (while_step?)]"
     |HoareLogicP| NIL)
    (|s!1| SKOLEM-CONST-DECL "state" |HoareLogicP| NIL)
    (|splice| CONST-DECL "trace" |HoareLogicP| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|seq| ADT-CONSTRUCTOR-DECL "[[program, program] -> (seq?)]" |HoareLogicP|
     NIL)
    (|seq?| ADT-RECOGNIZER-DECL "[program -> boolean]" |HoareLogicP| NIL)
    (|seq_step| ADT-CONSTRUCTOR-DECL
     "[[triple, preProof, preProof] -> (seq_step?)]" |HoareLogicP| NIL)
    (|seq_step?| ADT-RECOGNIZER-DECL "[preProof -> boolean]" |HoareLogicP|
     NIL))
   SHOSTAK))
 (|completeness| 0
  (|completeness-1| NIL 3940606380
   ("" (SKEEP)
    (("" (LEMMA "wlp_proof" :SUBST ("S" "H`prog" "Q" "H`post"))
      (("" (SKEEP)
        (("" (INST + "conseq_step(H, M)") (("" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|wlp| CONST-DECL "bool" |HoareLogicP| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|trace| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Proof?| DEF-DECL "bool" |HoareLogicP| NIL)
    (|conseq| CONST-DECL "bool" |HoareLogicP| NIL)
    (|valid| CONST-DECL "bool" |HoareLogicP| NIL)
    (|triple_valid| CONST-DECL "bool" |HoareLogicP| NIL)
    (|triple_holds| CONST-DECL "bool" |HoareLogicP| NIL)
    (|last| CONST-DECL "state" |HoareLogicP| NIL)
    (|first| CONST-DECL "state" |HoareLogicP| NIL)
    (|Proves| CONST-DECL "bool" |HoareLogicP| NIL)
    (|mkTriple| CONST-DECL "triple" |HoareLogicP| NIL)
    (|preProof| TYPE-DECL NIL |HoareLogicP| NIL)
    (|conseq_step?| ADT-RECOGNIZER-DECL "[preProof -> boolean]" |HoareLogicP|
     NIL)
    (|conseq_step| ADT-CONSTRUCTOR-DECL
     "[[triple, preProof] -> (conseq_step?)]" |HoareLogicP| NIL)
    (|wlp_proof| FORMULA-DECL NIL |HoareLogicP| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|value| FORMAL-NONEMPTY-TYPE-DECL NIL |HoareLogicP| NIL)
    (|state| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|parameter| FORMAL-TYPE-DECL NIL |HoareLogicP| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|assertion| TYPE-EQ-DECL NIL |HoareLogicP| NIL)
    (|program| TYPE-DECL NIL |HoareLogicP| NIL)
    (|triple| TYPE-EQ-DECL NIL |HoareLogicP| NIL))
   SHOSTAK)))

